<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Customizing the output on Konveyor</title><link>http://konveyor.io/docs/move2kube/tutorials/customizeoutput/</link><description>Recent content in Customizing the output on Konveyor</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 04 Aug 2022 19:22:55 -0600</lastBuildDate><atom:link href="http://konveyor.io/docs/move2kube/tutorials/customizeoutput/index.xml" rel="self" type="application/rss+xml"/><item><title>Add custom files and directories in custom locations</title><link>http://konveyor.io/docs/move2kube/tutorials/customizeoutput/addcustfiledir/</link><pubDate>Thu, 04 Aug 2022 19:22:55 -0600</pubDate><guid>http://konveyor.io/docs/move2kube/tutorials/customizeoutput/addcustfiledir/</guid><description>&lt;p>Move2Kube allows custom template files to be added to any directory. This example illustrates this by adding a custom Helm chart.&lt;/p>
&lt;ol>
&lt;li>Start by creating an empty workspace directory named &lt;code>workspace&lt;/code> and make it the current working directory. Asume all commands are executed within this directory.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-console" data-lang="console">&lt;span style="display:flex;">&lt;span>$ mkdir workspace &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> cd workspace
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Use the &lt;a href="https://github.com/konveyor/move2kube-demos/tree/main/samples/enterprise-app">enterprise-app&lt;/a> as input for this flow.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-console" data-lang="console">&lt;span style="display:flex;">&lt;span>$ curl https://move2kube.konveyor.io/scripts/download.sh | bash -s -- -d samples/enterprise-app/src -r move2kube-demos 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ ls src
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>README.md		config-utils		customers	docs			frontend		gateway			orders
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>In this project, all the apps have a pom.xml file. Use a custom transformer to place a Helm chart created from a template into each of those project directories.&lt;/p></description></item><item><title>Parameterizing custom fields in Helm Chart, Kustomize, OC templates</title><link>http://konveyor.io/docs/move2kube/tutorials/customizeoutput/paramcustomfieldshelm/</link><pubDate>Thu, 04 Aug 2022 19:22:25 -0600</pubDate><guid>http://konveyor.io/docs/move2kube/tutorials/customizeoutput/paramcustomfieldshelm/</guid><description>&lt;p>This tutorial illustrates how to parameterize a custom field in the Helm chart generated by Move2Kube.&lt;/p>
&lt;ol>
&lt;li>Start by creating an empty workspace directory named &lt;code>workspace&lt;/code> and make it the current working directory. Assume all commands are executed within this directory.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-console" data-lang="console">&lt;span style="display:flex;">&lt;span>$ mkdir workspace &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> cd workspace
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Use the &lt;a href="https://github.com/konveyor/move2kube-demos/tree/main/samples/enterprise-app">enterprise-app&lt;/a> as input for this flow.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-console" data-lang="console">&lt;span style="display:flex;">&lt;span>$ curl https://move2kube.konveyor.io/scripts/download.sh | bash -s -- -d samples/enterprise-app/src -r move2kube-demos
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ ls src
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>README.md		config-utils		customers	docs			frontend		gateway			orders
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>Run Move2Kube &lt;strong>without&lt;/strong> any customization. The relevant snippet from the deployment YAML generated in the path &lt;code>myproject/deploy/yamls-parameterized/helm-chart/myproject/templates/orders-deployment.yaml&lt;/code> is shown below.&lt;/li>
&lt;/ol>
&lt;p>When complete, delete the &lt;code>myproject&lt;/code> directory.&lt;/p></description></item><item><title>Add custom annotations to Kubernetes YAMLs</title><link>http://konveyor.io/docs/move2kube/tutorials/customizeoutput/customannotationsyaml/</link><pubDate>Thu, 04 Aug 2022 19:22:02 -0600</pubDate><guid>http://konveyor.io/docs/move2kube/tutorials/customizeoutput/customannotationsyaml/</guid><description>&lt;p>Move2Kube generates Kubernetes YAMLs based on the needs of the application, but there might be situations that might require specific fields to be different in the output. This example illustrates how to add an annotation to the Ingress YAML specifying an ingress class.&lt;/p>
&lt;ol>
&lt;li>Create an empty workspace directory named &lt;code>workspace&lt;/code> and make it the current working directory. Assume all commands are executed within this directory.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-console" data-lang="console">&lt;span style="display:flex;">&lt;span>$ mkdir workspace &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> cd workspace
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Use the &lt;a href="https://github.com/konveyor/move2kube-demos/tree/main/samples/enterprise-app">enterprise-app&lt;/a> as the input for this flow.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-console" data-lang="console">&lt;span style="display:flex;">&lt;span>$ curl https://move2kube.konveyor.io/scripts/download.sh | bash -s -- -d samples/enterprise-app/src -r move2kube-demos
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ ls src
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>README.md		config-utils		customers	docs			frontend		gateway			orders
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>Run Move2Kube &lt;strong>without&lt;/strong> any customization and the output ingress does not have any annotation. Once done, delete the &lt;code>myproject&lt;/code> directory.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-console" data-lang="console">&lt;span style="display:flex;">&lt;span>$ move2kube transform -s src/ --qa-skip &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> cat myproject/deploy/yamls/myproject-ingress.yaml &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> rm -rf myproject
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">networking.k8s.io/v1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">Ingress&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">metadata&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">creationTimestamp&lt;/span>: &lt;span style="color:#66d9ef">null&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">labels&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">move2kube.konveyor.io/service&lt;/span>: &lt;span style="color:#ae81ff">myproject&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">myproject&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="4">
&lt;li>Get the Starlark based custom transformer &lt;a href="https://github.com/konveyor/move2kube-transformers/tree/main/add-custom-kubernetes-annotation">here&lt;/a> and copy it into the &lt;code>customizations&lt;/code> sub-directory.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-console" data-lang="console">&lt;span style="display:flex;">&lt;span>$ curl https://move2kube.konveyor.io/scripts/download.sh | bash -s -- -d add-custom-kubernetes-annotation -r move2kube-transformers -o customizations
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="5">
&lt;li>Transform using this customization and specify it using the &lt;code>-c&lt;/code> flag.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-console" data-lang="console">&lt;span style="display:flex;">&lt;span>$ move2kube transform -s src/ -c customizations/ --qa-skip
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Once the output is generated, note in the snippet of the ingress file (&lt;code>myproject/deploy/yamls/myproject-ingress.yaml&lt;/code>) that there is an annotation for the ingress class added (&lt;code>kubernetes.io/ingress.class: haproxy&lt;/code>):&lt;/p></description></item><item><title>Customize generated Dockerfile and built-in transformer behavior</title><link>http://konveyor.io/docs/move2kube/tutorials/customizeoutput/customgendockerfile/</link><pubDate>Thu, 04 Aug 2022 19:21:31 -0600</pubDate><guid>http://konveyor.io/docs/move2kube/tutorials/customizeoutput/customgendockerfile/</guid><description>&lt;p>In this tutorial, Move2Kube will add a custom Dockerfile, and a custom file.&lt;/p>
&lt;ol>
&lt;li>Create an empty workspace directory named &lt;code>workspace&lt;/code> and make it the current working directory. Assume all commands are executed within this directory.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-console" data-lang="console">&lt;span style="display:flex;">&lt;span>$ mkdir workspace &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> cd workspace
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Use the &lt;a href="https://github.com/konveyor/move2kube-demos/tree/main/samples/enterprise-app">enterprise-app&lt;/a> as input for this flow.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-console" data-lang="console">&lt;span style="display:flex;">&lt;span>$ curl https://move2kube.konveyor.io/scripts/download.sh | bash -s -- -d samples/enterprise-app/src -r move2kube-demos
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ ls src
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>README.md		config-utils		customers	docs			frontend		gateway			orders
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>Run Move2Kube &lt;strong>without&lt;/strong> any customization.&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>If the &lt;code>Dockerfile&lt;/code> is generated for the &lt;code>frontend&lt;/code> app, it uses &lt;code>registry.access.redhat.com/ubi8/nodejs-12&lt;/code> as the base image.&lt;/li>
&lt;li>There are no scripts named &lt;code>start-nodejs.sh&lt;/code> in the &lt;code>frontend&lt;/code> service directory.&lt;/li>
&lt;li>The Kubernetes YAMLs are generated in &lt;code>myproject/deploy/yamls&lt;/code> directory.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-console" data-lang="console">&lt;span style="display:flex;">&lt;span>$ move2kube transform -s src/ --qa-skip &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> ls myproject/source/frontend &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> cat myproject/source/frontend/Dockerfile &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> ls myproject/deploy &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> rm -rf myproject
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Dockerfile		README.md		dr-surge.js		manifest.yml		package-lock.json	server.js		stories			test-setup.js		webpack.common.js	webpack.prod.js LICENSE		__mocks__		jest.config.js		nodemon.json		package.json		src			stylePaths.js		tsconfig.json		webpack.dev.js
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>FROM registry.access.redhat.com/ubi8/nodejs-12
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>COPY . .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>RUN npm install
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>RUN npm run build
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>EXPOSE 8080
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CMD npm run start
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>cicd			compose			knative			knative-parameterized	yamls			yamls-parameterized
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The next steps will:&lt;/p></description></item></channel></rss>