<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Migrating Enterprise Scale Cloud Foundry Apps to Kubernetes on Konveyor</title><link>http://konveyor.io/docs/move2kube/tutorials/cfappstok8/</link><description>Recent content in Migrating Enterprise Scale Cloud Foundry Apps to Kubernetes on Konveyor</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Fri, 12 Aug 2022 12:08:16 -0600</lastBuildDate><atom:link href="http://konveyor.io/docs/move2kube/tutorials/cfappstok8/index.xml" rel="self" type="application/rss+xml"/><item><title>1. Collect</title><link>http://konveyor.io/docs/move2kube/tutorials/cfappstok8/1collect/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://konveyor.io/docs/move2kube/tutorials/cfappstok8/1collect/</guid><description>&lt;blockquote>
&lt;p>&lt;strong>Note:&lt;/strong> This is an optional step. If you are not familiar with Cloud Foundry or you do not want to collect information from the running app, skip to Customizing the output.&lt;/p>&lt;/blockquote>
&lt;p>To analyze the running application in Cloud Foundry (CF), the Move2Kube CLI tool provides a command called &lt;code>collect&lt;/code>. As the name suggests, it collects information about applications running in the cloud.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>For collecting information from a CF running instance, consider requiring &lt;code>cf&lt;/code> CLI for logging into Cloud Foundry. To target a specific Kubernetes cluster for the YAMLs, either &lt;code>oc&lt;/code> or &lt;code>kubectl&lt;/code> to collect information about the target cluster is necessary.&lt;/p></description></item><item><title>2. Plan</title><link>http://konveyor.io/docs/move2kube/tutorials/cfappstok8/2plan/</link><pubDate>Fri, 12 Aug 2022 12:08:16 -0600</pubDate><guid>http://konveyor.io/docs/move2kube/tutorials/cfappstok8/2plan/</guid><description>&lt;hr>
&lt;p>We start by planning the migration. During the plan phase, Move2Kube will analyze the files in the source directory, detect what services exist, create a plan on how to containerize them using Dockerfiles, and transform them into Kubernetes deployments, services, ingress, etc.&lt;/p>
&lt;p>In order to do the planning, Move2Kube has a large number of built-in transformers for different languages and platforms. Each transformer walks through the source directory from top to bottom and tries to find files that it recognizes. For example, a Golang transformer will try to find a &lt;code>go.mod&lt;/code> file to detect a Golang project. Once it detects a directory containing a service, it will try to extract as much information from it as possible. Some of the information it tries to find are the service name, ports, environment variables, etc.&lt;/p></description></item><item><title>3. Transform</title><link>http://konveyor.io/docs/move2kube/tutorials/cfappstok8/3transform/</link><pubDate>Fri, 12 Aug 2022 12:08:16 -0600</pubDate><guid>http://konveyor.io/docs/move2kube/tutorials/cfappstok8/3transform/</guid><description>&lt;p>Now run the transformation according to the plan file generated in the previous step. The transformation phase runs all of the transformers again, but this time the transformers will use the plan to generate the output files.&lt;/p>
&lt;p>During this process, the transformers might run into situations where it requires some more information to generate the output. In order to get this information, it will ask the user some questions. The questions range from yes/no, to multiple choice, to string input and most will have a default answer.&lt;/p></description></item></channel></rss>