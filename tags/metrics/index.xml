<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Metrics on Konveyor</title><link>http://konveyor.io/tags/metrics/</link><description>Recent content in Metrics on Konveyor</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 07 Jul 2022 07:00:00 +0000</lastBuildDate><atom:link href="http://konveyor.io/tags/metrics/index.xml" rel="self" type="application/rss+xml"/><item><title>A Method to Measure and Manage Technical Debt</title><link>http://konveyor.io/blog/2022/measure-manage-technical-debt/</link><pubDate>Thu, 07 Jul 2022 07:00:00 +0000</pubDate><guid>http://konveyor.io/blog/2022/measure-manage-technical-debt/</guid><description>&lt;p>As a software developer, technical debt is all those little things that you feel are hampering the efficiency of your coding. These are the issues that you (or your manager) choose to handle next time, because of the urgency of the current release. But sometimes, by the time you get to them, they have become so big you do not know where to start solving them. The difficult part is that decisions we make regarding technical debt have to balance between short term and long term implications of accumulating such debt, emphasizing the need to properly assess and address it when planning development cycles.&lt;/p></description></item><item><title>Exploring a Metrics-Driven Approach to Transformation</title><link>http://konveyor.io/blog/2021/metrics-driven-approach-to-transformation/</link><pubDate>Wed, 03 Mar 2021 07:00:00 +0000</pubDate><guid>http://konveyor.io/blog/2021/metrics-driven-approach-to-transformation/</guid><description>&lt;p>My team has been working with organizations adopting containers, Kubernetes, and Red Hat OpenShift for more than three years now. When we started providing professional services around enterprise Kubernetes, it became clear we needed a program-level framework for adopting containers that spelled out the activities of multiple project teams. Some participants would be focused on container platform management and operations, some on continuous delivery, some on the application lifecycle, and others on cross-cutting process transformation.&lt;/p></description></item></channel></rss>